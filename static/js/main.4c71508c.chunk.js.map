{"version":3,"sources":["componentes/Personajes.jsx","componentes/Ficha.jsx","App.js","reportWebVitals.js","index.js"],"names":["Personajes","props","useState","listaPersonajes","setListaPersonajes","useEffect","a","addListaPersonajes","personajes","agregarDatos","fetch","datos","json","console","log","className","onChange","event","seleccionarPersonaje","target","value","map","e","char_id","name","Ficha","setSeleccionarPersonaje","agregarPersonaje","id","personajeSeleccionado","tomarPersonaje","width","src","img","alt","portrayed","birthday","occupation","category","App","personajeID","setPersonajeID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAqCeA,EAlCI,SAACC,GAEhB,MAAgDC,mBAAS,IAAzD,mBAAQC,EAAR,KAAyBC,EAAzB,KAEAC,qBAAU,YACY,uCAAG,4BAAAC,EAAA,sEACQC,IADR,OACXC,EADW,OAEjBJ,EAAmBI,GAFF,2CAAH,qDAIlBC,KACD,IAEH,IAAMF,EAAkB,uCAAG,8BAAAD,EAAA,+EAECI,MAAM,6CAFP,cAEbC,EAFa,gBAGMA,EAAMC,OAHZ,cAGbJ,EAHa,OAInBK,QAAQC,IAAIN,GAJO,kBAKZA,GALY,kCAOnBK,QAAQC,IAAR,MAPmB,0DAAH,qDAexB,OACQ,wBAAQC,UAAU,iDAAiDC,SAL9C,SAACC,GAC1BhB,EAAMiB,qBAAqBD,EAAME,OAAOC,QAIpC,SACKjB,EAAgBkB,KAAI,SAAAC,GAAC,OAAG,wBACfF,MAAOE,EAAEC,QADM,SACID,EAAEE,MADOF,EAAEC,eCazCE,EA3CD,SAACxB,GAEX,MAA0DC,mBAAS,IAAnE,mBAAQgB,EAAR,KAA8BQ,EAA9B,KAEArB,qBAAU,YACc,uCAAG,4BAAAC,EAAA,sEACiBqB,EAAiB1B,EAAM2B,IADxC,OACbC,EADa,OAEnBH,EAAwBG,EAAsB,IAF3B,2CAAH,qDAIpBC,KACD,CAAC7B,EAAM2B,KAEV,IAAMD,EAAgB,uCAAG,WAAOC,GAAP,iBAAAtB,EAAA,+EAEGI,MAAM,6CAAD,OAA8CkB,IAFtD,cAEXjB,EAFW,gBAGQA,EAAMC,OAHd,cAGXJ,EAHW,OAIjBK,QAAQC,IAAIN,GAJK,kBAKVA,GALU,kCAOjBK,QAAQC,IAAR,MAPiB,0DAAH,sDAYtB,OACI,qBAAKC,UAAU,2BAAf,SACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKgB,MAAM,MAAMhB,UAAU,OAAOiB,IAAKd,EAAqBe,IAAKC,IAAI,UAEvE,qBAAKnB,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,iCAAd,SAAgDG,EAAqBM,OACrE,oBAAGT,UAAU,YAAb,+BAA4CG,EAAqBiB,aACjE,oBAAGpB,UAAU,YAAb,4BAAsCG,EAAqBkB,YAC3D,oBAAGrB,UAAU,YAAb,0BAAuCG,EAAqBmB,cAC5D,mBAAGtB,UAAU,iBAAb,SAA8B,uBAAOA,UAAU,aAAjB,SAA+BG,EAAqBoB,wBCLjFC,MAzBf,WAEE,MAAwCrC,mBAAS,IAAjD,mBAAQsC,EAAR,KAAqBC,EAArB,KAOA,OACE,qBAAK1B,UAAU,eAAf,SACE,sBAAKA,UAAU,gEAAf,UACE,oBAAIA,UAAU,SAAd,8BACA,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,YAAd,iCACA,cAAC,EAAD,CAAYG,qBAXO,SAACU,GAC1Ba,EAAeb,GACff,QAAQC,IAAI0B,MAUN,qBAAKzB,UAAU,qCAAf,SACE,cAAC,EAAD,CAAOa,GAAIY,eCbRE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c71508c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css'\n\nconst Personajes = (props)=> {\n    \n    const [ listaPersonajes, setListaPersonajes ] = useState([]);\n\n    useEffect(()=> {\n        const agregarDatos = async()=> {\n            const personajes = await addListaPersonajes();\n            setListaPersonajes(personajes);\n        }\n        agregarDatos();\n    }, []);\n\n    const addListaPersonajes = async ()=> {\n        try{\n            const datos = await fetch('https://breakingbadapi.com/api/characters');\n            const personajes = await datos.json();\n            console.log(personajes);\n            return personajes;\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n    const seleccionarPersonaje = (event)=> {\n        props.seleccionarPersonaje(event.target.value);\n    }\n\n    return(\n            <select className=\"form-control container bg-dark text-white mt-3\" onChange={seleccionarPersonaje} >\n                {listaPersonajes.map(e=> <option key={e.char_id} \n                          value={e.char_id}>{e.name}</option> )}\n            </select>\n    );\n}\nexport default Personajes;\n","import React, { useState, useEffect } from 'react';\n\nconst Ficha = (props)=>{\n\n    const [ seleccionarPersonaje, setSeleccionarPersonaje ] = useState({});\n\n    useEffect(()=>{\n        const tomarPersonaje = async ()=> {\n            const personajeSeleccionado = await agregarPersonaje(props.id);\n            setSeleccionarPersonaje(personajeSeleccionado[0]);\n        }\n        tomarPersonaje();\n    }, [props.id]);\n\n    const agregarPersonaje = async (id)=> {\n        try{\n            const datos = await fetch(`https://breakingbadapi.com/api/characters/${id}`);\n            const personajes = await datos.json();\n            console.log(personajes);\n            return personajes;\n        } catch(err){\n            console.log(err);\n        }\n\n    }\n\n    return(\n        <div className=\"card mb-3 p-2 bg-warning\">\n        <div className=\"row g-0\">\n          <div className=\"col-md-4 d-flex justify-content-center\">\n            <img width=\"200\" className=\"card\" src={seleccionarPersonaje.img} alt=\"...\" />\n          </div>\n          <div className=\"col-md-8 card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title bg-warning mt-3 p-1\">{seleccionarPersonaje.name}</h5>\n              <p className=\"card-text\">Interpretado por: {seleccionarPersonaje.portrayed}</p>\n              <p className=\"card-text\">Cumplea√±os: {seleccionarPersonaje.birthday}</p>\n              <p className=\"card-text\">Ocupaciones: {seleccionarPersonaje.occupation}</p>\n              <p className=\"card-text mb-2\"><small className=\"text-muted\">{seleccionarPersonaje.category}</small></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\nexport default Ficha;","import React, { useState } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport './App.css';\n\n// Componentes\nimport Personajes from './componentes/Personajes';\nimport Ficha from './componentes/Ficha';\n\nfunction App() {\n\n  const [ personajeID, setPersonajeID ] = useState(\"\");\n\n  const mostrarPersonajeID = (id)=> {\n    setPersonajeID(id);\n    console.log(personajeID);\n  }\n  \n  return (\n    <div className=\"App bg-light\">\n      <div className=\"m-auto cuadroCelu col-12 col-sm-8 col-md-6 col-xl-4 col-xxl-3\">\n        <h1 className=\"titulo\">Breaking Bad API</h1>\n        <div className=\"px-3\">\n          <h6 className=\"pt-4 ps-1\">Elije un personaje:</h6>\n          <Personajes seleccionarPersonaje={mostrarPersonajeID} />\n          <div className=\"d-flex justify-content-center mt-4\">\n            <Ficha id={personajeID}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}